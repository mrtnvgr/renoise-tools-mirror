  local DIALOG_MARGIN = renoise.ViewBuilder.DEFAULT_DIALOG_MARGIN
  local control_example_dialog = nil
  local vb = nil
  local dvb = nil 
 
  local conf=3
  local noarp=2 
  local skipping=1
  local voices=1
  local popupmemory1=1
  local popupmemory2=2
  local kindpopupmemory1=1
  local kindpopupmemory2=3
  local temp
  local matrix1={{{{{{{{}}}}}}}}
  local matrix2={{{}}}
  local matrix3={{{}}}
  local a
  local instnamestable={}
  local tablica={{}}
  local tablica2={{}}
  local tablica3={{}}

 local vcesnmbr=3
 local linia=1
 local ln=1
 local pipi={}
 local pipic=1

 local chordsbasic={{0,0,0,0},
                    {0,0,0,0},
                    {0,0,0,0},
                    {0,0,0,0},
                    {0,0,0,0},
                    {0,0,0,0},
                    {0,0,0,0}}
                    
 local chordssimple={{-1,-1,-1,-1},
                     {-1,-1,-1,-1},
                     {-1,-1,-1,-1},
                     {-1,-1,-1,-1},
                     {-1,-1,-1,-1},
                     {-1,-1,-1,-1},
                     {-1,-1,-1,-1}}

 local chordssimpleo={{-1,-1,-1,-1},
                      {-1,-1,-1,-1},
                      {-1,-1,-1,-1},
                      {-1,-1,-1,-1},
                      {-1,-1,-1,-1},
                      {-1,-1,-1,-1},
                      {-1,-1,-1,-1}}
                    
 local mat1={{{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --c
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --c#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --d
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --d#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --e
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --f
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --f#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --g
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --g#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --a
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --a#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}} --b
             
 local mat2={{{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --c
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --c#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --d
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --d#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --e
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --f
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --f#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --g
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --g#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --a
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}, --a#
             {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}} --b            
          
          
 local mat3={{0,0}, {0,0}, {0,0}, {0,0}, {0,0},{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}}   
 local mat={0,0,0,0,0,0,0}

function definearrays()
 matrix1={ -- matrix
          { --priorities
           { --noarp
            { --polyphony
             { --skipping
              {--scale 

               --major noskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --1
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              },--/scale          
              { --scale

               --harmonicminor noskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --2
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor noskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --3
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }, --/scale
              {  --scale
            
               --hungarianminor noskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --4      
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, --5
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale

               --harmonicminor halfskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, --6
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, --7         
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}            
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}},  --8
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale
             
               --major skipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, --9
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              {--scale

               --harmonicminor skipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, --10
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor skipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}},  --11     
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}},
               {{3,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              {  --scale
              
               --hungarianminor skipping 3 arp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}},  --12
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}}, --13
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}}, --14
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor noskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}},  --15
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor noskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}}, --16   
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale

               --major halfskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}},  --17
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, --18
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, --19   
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}},  --20 
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale

               --major skipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, --21
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              {--scale

               --harmonicminor skipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, --22
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor skipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, --23    
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor skipping 4 arp 1
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}},  --24  
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             } --/skipping          
            } --/polyphony
           }, --/noarp
           { --noarp
            { --polyphony
             { --skipping
              {--scale
              
               --major noskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --25
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --26
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}},  --27        
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {3,1}, {3,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor noskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {1,1}, {1,1}, {6,1}, {4,1}},  --28
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --29
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, --30
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}},  --31     
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {3,1}, {3,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}}, 
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {1,1}, {1,1}, {6,1}, {7,1}},  --32
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale

               --major skipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}}, --33
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {2,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{2,11},{7,11},{2,11},{7,11},{2,11},{7,11},{3,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {7,8}, {3,8}, {7,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {7,4}, {5,10},{2,4}, {7,10},{2,4}, {7,10}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{7,6}, {4,6}, {7,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}},  --34
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,6}, {5,10},{1,5}, {3,10},{1,5}, {3,10},{5,10}},
               {{1,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{2,11},{4,7}, {6,4}, {2,11},{4,7}, {2,11},{4,7}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,8}, {4,10},{2,8}, {6,10},{4,10},{2,8}, {4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {1,8}, {5,9}, {5,4}},
               {{3,1}, {7,1}, {7,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor skipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {1,1}, {4,1}},  --35   
               {{6,11},{3,11},{6,11},{3,11},{6,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {3,1}, {3,1}},
               {{4,8}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{1,1}, {2,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,10},{4,7}, {6,10},{2,10},{6,10},{2,10}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {6,6}, {1,9}, {1,6}, {7,10},{4,4}, {7,10}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {1,8}, {4,11},{4,6}},
               {{3,1}, {7,1}, {7,1}, {4,1}, {5,1}, {3,1}, {7,1}}         
              }, --/scale
              {  --scale
             
               --hungarianminor skipping 3 noarp 1
               {{1,1}, {4,1}, {1,1}, {1,1}, {5,1}, {6,1}, {7,1}},  --36
               {{4,8}, {7,8}, {4,8}, {7,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{6,5}, {4,9}, {1,5}, {3,10},{1,5}, {3,10},{1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {3,12},{5,9}, {2,5}, {7,9}, {7,5}, {3,12}},
               {{3,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping 
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, --37
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              { --scale

               --harmonicminor noskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, --38
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --39  
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor noskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --40
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --41
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, --42
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --43
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor halfskipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --44
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale
             
               --major skipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --45
               {{7,3}, {1,3}, {7,3}, {5,3}, {7,3}, {5,3}, {1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{4,11},{5,11},{4,11},{7,11},{5,11}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {1,8}, {7,8}, {1,8}, {7,8}, {3,8}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {7,4}, {1,10},{7,4}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{5,6}, {4,6}, {7,6}, {5,6}, {2,6}, {5,6}, {4,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, --46
               {{5,9}, {6,6}, {5,9}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {1,6}, {1,5}, {1,6}, {4,12},{3,6}, {5,10}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {2,7}, {3,5}, {5,2}, {6,12},{5,2}, {2,7}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,8}, {4,10},{2,10},{5,11},{2,10},{2,8}, {2,10}},
               {{4,8}, {5,4}, {6,8}, {5,4}, {4,3}, {4,8}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              {  --scale
             
               --melodicminor skipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --47 
               {{7,3}, {1,3}, {7,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {2,8}, {2,3}, {2,8}, {2,3}, {2,8}, {2,3}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,5}, {4,10},{3,5}, {4,7}, {2,10},{4,7}, {2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{1,9}, {6,6}, {1,9}, {2,4}, {6,9}, {2,4}, {6,9}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{2,11},{2,6}, {3,9}, {2,11},{2,6}, {2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor skipping 4 noarp 1
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}},  --48
               {{4,8}, {1,2}, {4,8}, {7,8}, {7,6}, {4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {3,2}, {4,9}, {3,6}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,10},{4,12},{7,10},{4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {1,12},{7,5}, {1,12}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             } --/skipping          
            } --/polyphony           
           } --/noarp
          }, --/priorities
          { --priorities
           { --noarp
            { --polyphony
             { --skipping
              {--scale 

               --major noskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 49
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              },--/scale          
              { --scale

               --harmonicminor noskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 50
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{5,1}, {5,1}, {5,1}, {2,1}, {5,1}, {2,1}, {5,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {6,1}, {4,1}, {2,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor noskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 51
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {1,1}, {3,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {6,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {5,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              }, --/scale
              {  --scale
            
               --hungarianminor noskipping 3 arp 2
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {4,1}}, -- 52
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {7,1}, {7,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 53 
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {7,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              { --scale

               --harmonicminor halfskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 54
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {2,1}, {5,1}, {2,1}, {5,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {7,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {7,1}}, -- 55
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {1,1}, {3,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {6,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {5,1}, {7,1}, {5,1}, {6,1}, {5,1}}         
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 arp 2
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}}, -- 56
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {7,1}, {3,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale
             
               --major skipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 57
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              {--scale

               --harmonicminor skipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 58
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {2,1}, {5,1}, {6,1}, {5,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {3,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale

               --melodicminor skipping 3 arp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {1,1}, {7,1}}, -- 59
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {1,1}, {7,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {5,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              {  --scale
              
               --hungarianminor skipping 3 arp 2
               {{1,1}, {6,1}, {1,1}, {6,1}, {5,1}, {6,1}, {7,1}}, -- 60
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {3,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 arp 2
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}}, -- 61
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {3,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 4 arp 2
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}}, -- 62
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }, --/scale
              { --scale
             
               --melodicminor noskipping 4 arp 2
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}}, -- 63
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor noskipping 4 arp 2
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}}, -- 64
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale

               --major halfskipping 4 arp 2
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {7,1}}, -- 65
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {3,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {6,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {6,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 arp 2
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {7,1}}, -- 66
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {5,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 arp 2
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {7,1}}, -- 67
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 4 arp 2
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 68
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale

               --major skipping 4 arp 2
               {{6,1}, {2,1}, {6,1}, {6,1}, {5,1}, {6,1}, {7,1}}, -- 69
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {3,1}, {6,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {3,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 4 arp 2
               {{4,1}, {4,1}, {4,1}, {4,1}, {5,1}, {4,1}, {7,1}}, -- 70
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {4,1}, {4,1}, {7,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {5,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor skipping 4 arp 2
               {{2,1}, {2,1}, {2,1}, {2,1}, {5,1}, {2,1}, {7,1}}, -- 71
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {2,1}, {2,1}, {2,1}, {6,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor skipping 4 arp 2
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 72
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             } --/skipping          
            } --/polyphony
           }, --/noarp
           { --noarp
            { --polyphony
             { --skipping
              {--scale
              
               --major noskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 73
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 74
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{5,1}, {5,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {2,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 75
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {3,1}, {3,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {6,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {7,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              }, --/scale
              {
             
               --hungarianminor noskipping 3 noarp 2
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {6,1}, {4,1}}, -- 76
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {7,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {3,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 77
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {7,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 78
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {7,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 79
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {3,1}, {3,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{4,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {6,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {7,1}, {7,1}, {5,1}, {3,1}, {5,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 noarp 2
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {6,1}, {7,1}}, -- 80
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {7,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale

               --major skipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}}, -- 81
               {{5,3}, {5,3}, {5,3}, {5,3}, {7,3}, {5,3}, {4,9}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{2,11},{7,11},{2,11},{2,11},{2,11},{2,11},{5,5}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{7,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {7,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}}, -- 82
               {{7,9}, {5,7}, {7,9}, {5,7}, {7,9}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {3,1}},
               {{3,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{1,1}, {4,1}, {7,1}, {4,1}, {7,1}, {4,1}, {4,1}},
               {{6,4}, {4,7}, {6,4}, {2,11},{6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{2,8}, {6,10},{4,10},{6,10},{4,10}},
               {{5,9}, {5,4}, {5,9}, {5,4}, {5,4}, {5,9}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor skipping 3 noarp 2
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {1,1}, {4,1}}, -- 83
               {{7,3}, {3,11},{7,3}, {3,11},{7,3}, {3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {3,1}, {3,1}},
               {{2,3}, {1,10},{2,3}, {1,10},{2,3}, {1,10},{2,3}},
               {{1,1}, {2,1}, {7,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {6,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,6}, {4,11},{4,6}, {4,11},{4,11},{4,6}},
               {{5,1}, {5,1}, {7,1}, {4,1}, {5,1}, {3,1}, {5,1}}      
              }, --/scale
              {  --scale
             
               --hungarianminor skipping 3 noarp 2
               {{1,1}, {6,1}, {1,1}, {1,1}, {5,1}, {6,1}, {7,1}}, -- 84
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {4,1}, {7,1}, {7,1}, {7,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,2}, {5,8}, {4,4}, {5,8}, {5,8}, {4,4}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping 
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 noarp 2
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 85
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
              },--/scale
              { --scale

               --harmonicminor noskipping 4 noarp 2
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 86
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 4 noarp 2
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 87
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor noskipping 4 noarp 2
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 88
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 4 noarp 2
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 89
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 noarp 2
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 90
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 noarp 2
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 91
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor halfskipping 4 noarp 2
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 92
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale
             
               --major skipping 4 noarp 2
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 93
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 4 noarp 2
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 94
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{4,8}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              {  --scale
             
               --melodicminor skipping 4 noarp 2
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 95
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,8}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,6}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor skipping 4 noarp 2
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 96
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             } --/skipping          
            } --/polyphony           
           } --/noarp          
          }, --/priorities
          { --priorities
           { --noarp
            { --polyphony
             { --skipping
              {--scale 

               --major noskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 97
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {5,1}, {5,1}, {3,1}, {5,1}}
              },--/scale          
              { --scale

               --harmonicminor noskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 98
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {6,1}, {4,1}, {6,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor noskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 99
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}}
               
              }, --/scale
              {  --scale
            
               --hungarianminor noskipping 3 arp 3
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}}, -- 100
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {7,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {6,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {7,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 101
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {5,1}, {5,1}, {6,1}, {5,1}}
               
              },--/scale
              { --scale

               --harmonicminor halfskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 102
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {6,1}, {5,1}}              
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {7,1}}, -- 103
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 arp 3
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}}, -- 104
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {7,1}, {7,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{7,1}, {7,1}, {3,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale
             
               --major skipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 105
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              {--scale

               --harmonicminor skipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 106
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {5,1}, {5,1}, {6,1}, {5,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {4,1}, {3,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {5,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor skipping 3 arp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {1,1}, {7,1}}, -- 107
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {1,1}, {7,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {5,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              {  --scale
              
               --hungarianminor skipping 3 arp 3
               {{1,1}, {6,1}, {1,1}, {6,1}, {5,1}, {6,1}, {7,1}}, -- 108
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {3,1}, {6,1}, {5,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {5,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 arp 3
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}}, -- 109
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {3,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 4 arp 3
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}}, -- 110
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}} 
              }, --/scale
              { --scale
             
               --melodicminor noskipping 4 arp 3
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}}, -- 111
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor noskipping 4 arp 3
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {2,1}}, -- 112
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {5,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {6,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {7,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale

               --major halfskipping 4 arp 3
               {{6,1}, {2,1}, {6,1}, {6,1}, {2,1}, {6,1}, {7,1}}, -- 113
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {3,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {6,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {6,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {3,1}, {3,1}, {6,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 arp 3
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {7,1}}, -- 114
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {5,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
               
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 arp 3
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {7,1}}, -- 115
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 4 arp 3
               {{1,1}, {2,1}, {1,1}, {4,1}, {1,1}, {6,1}, {7,1}}, -- 116
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale

               --major skipping 4 arp 3
               {{6,1}, {2,1}, {6,1}, {6,1}, {5,1}, {6,1}, {7,1}}, -- 117
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {3,1}, {6,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{3,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {2,1}, {3,1}, {6,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{3,1}, {3,1}, {3,1}, {4,1}, {3,1}, {6,1}, {3,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 4 arp 3
               {{4,1}, {4,1}, {4,1}, {4,1}, {5,1}, {4,1}, {7,1}}, -- 118
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {4,1}, {4,1}, {7,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{1,1}, {4,1}, {3,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{4,1}, {4,1}, {3,1}, {4,1}, {5,1}, {4,1}, {4,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor skipping 4 arp 3
               {{2,1}, {2,1}, {2,1}, {2,1}, {5,1}, {2,1}, {7,1}}, -- 119
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{1,1}, {2,1}, {2,1}, {2,1}, {2,1}, {6,1}, {2,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {2,1}, {3,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              }, --/scale
              { --scale
             
               --hungarianminor skipping 4 arp 3
               {{1,1}, {2,1}, {1,1}, {4,1}, {5,1}, {6,1}, {7,1}}, -- 120
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{1,1}, {2,1}, {3,1}, {2,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {3,1}, {6,1}, {7,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {4,1}, {7,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{1,1}, {7,1}, {3,1}, {4,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             } --/skipping          
            } --/polyphony
           }, --/noarp
           { --noarp
            { --polyphony
             { --skipping
              {--scale
              
               --major noskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 121
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {6,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {2,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {5,1}, {5,1}, {3,1}, {5,1}}
              },--/scale
              { --scale
             
               --harmonicminor noskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 122
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {6,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {5,1}, {5,1}, {5,1}, {5,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 123
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{5,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {3,1}, {1,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {7,1}, {5,1}, {5,1}, {5,1}, {5,1}}
              }, --/scale
              {
             
               --hungarianminor noskipping 3 noarp 3
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {6,1}, {1,1}}, -- 124
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{5,1}, {7,1}, {5,1}, {7,1}, {5,1}, {7,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{7,1}, {4,1}, {7,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {6,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {7,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 125
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{4,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {5,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {6,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {5,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {6,1}, {4,1}}, -- 126
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {5,1}, {5,1}, {5,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {5,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor halfskipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {1,1}, {4,1}}, -- 127
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {3,1}, {1,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {7,1}, {5,1}, {5,1}, {5,1}, {5,1}}
              }, --/scale
              { --scale
             
               --hungarianminor halfskipping 3 noarp 3
               {{1,1}, {6,1}, {1,1}, {1,1}, {1,1}, {6,1}, {7,1}}, -- 128
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {7,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{7,1}, {4,1}, {7,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              } --/scale
             }, --/skipping
             { --skipping
              { --/scale

               --major skipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}}, -- 129
               {{5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}, {5,3}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {6,1}, {2,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{1,1}, {2,1}, {3,1}, {6,1}, {3,1}, {6,1}, {3,1}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{5,8}, {5,8}, {3,8}, {5,8}, {3,8}, {5,8}, {3,8}},
               {{1,1}, {2,1}, {3,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{2,4}, {2,4}, {5,10},{2,4}, {5,10},{2,4}, {2,4}},
               {{6,1}, {2,1}, {3,1}, {4,1}, {5,1}, {6,1}, {2,1}},
               {{2,6}, {4,6}, {2,6}, {4,6}, {2,6}, {4,6}, {4,6}},
               {{3,1}, {5,1}, {3,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {6,1}, {4,1}}, -- 130
               {{5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}},
               {{1,1}, {5,1}, {5,1}, {5,1}, {5,1}, {6,1}, {2,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {1,1}},
               {{5,10},{5,10},{5,10},{5,10},{5,10},{5,10},{5,10}},
               {{1,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}, {6,4}},
               {{1,1}, {5,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {4,1}, {5,1}, {6,1}, {4,1}},
               {{6,10},{4,10},{6,10},{6,10},{4,10},{6,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{5,1}, {5,1}, {7,1}, {4,1}, {5,1}, {6,1}, {5,1}}
              }, --/scale
              { --scale
             
               --melodicminor skipping 3 noarp 3
               {{1,1}, {4,1}, {1,1}, {4,1}, {5,1}, {1,1}, {4,1}}, -- 131
               {{3,11},{3,11},{3,11},{3,11},{3,11},{3,11},{3,11}},
               {{1,1}, {2,1}, {5,1}, {2,1}, {5,1}, {2,1}, {2,1}},
               {{1,1}, {2,1}, {1,1}, {1,1}, {1,1}, {3,1}, {1,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{1,1}, {2,1}, {4,1}, {4,1}, {2,1}, {4,1}, {4,1}},
               {{4,7}, {4,10},{4,7}, {4,10},{2,10},{4,10},{2,10}},
               {{1,1}, {2,1}, {5,1}, {4,1}, {5,1}, {1,1}, {5,1}},
               {{4,4}, {1,6}, {1,9}, {1,6}, {1,9}, {4,4}, {1,9}},
               {{4,1}, {2,1}, {4,1}, {4,1}, {5,1}, {4,1}, {2,1}},
               {{4,11},{4,11},{4,11},{4,11},{4,11},{4,11},{4,11}},
               {{5,1}, {5,1}, {7,1}, {4,1}, {5,1}, {5,1}, {5,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor skipping 3 noarp 3
               {{1,1}, {6,1}, {1,1}, {1,1}, {5,1}, {6,1}, {7,1}}, -- 132
               {{4,8}, {4,8}, {4,8}, {4,8}, {2,6}, {4,8}, {2,6}},
               {{1,1}, {7,1}, {5,1}, {7,1}, {5,1}, {6,1}, {7,1}},
               {{1,1}, {6,1}, {1,1}, {6,1}, {1,1}, {6,1}, {7,1}},
               {{6,5}, {6,9}, {1,5}, {6,9}, {1,5}, {6,9}, {1,5}},
               {{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}},
               {{1,1}, {4,1}, {7,1}, {7,1}, {7,1}, {7,1}, {7,1}},
               {{1,1}, {5,1}, {5,1}, {1,1}, {5,1}, {1,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {5,1}, {6,1}, {6,1}},
               {{5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}, {5,8}},
               {{5,9}, {7,9}, {5,9}, {7,5}, {7,9}, {7,5}, {7,9}},
               {{5,1}, {7,1}, {7,1}, {7,1}, {5,1}, {6,1}, {7,1}}
              }  --/scale
             } --/skipping 
            }, --/polyphony
            { --polyphony
             { --skipping
              { --scale 

               --major noskipping 4 noarp 3
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 133
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
               
              },--/scale
              { --scale

               --harmonicminor noskipping 4 noarp 3
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 134
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --melodicminor noskipping 4 noarp 3
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 135
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor noskipping 4 noarp 3
              {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 136
              {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
              {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
              {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
              {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
              {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
              {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
              {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
              {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
              {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
              {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
              {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             }, --/skipping
             { --skipping
              { --scale
             
               --major halfskipping 4 noarp 3
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 137
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
              },--/scale
              { --scale
             
               --harmonicminor halfskipping 4 noarp 3
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 138
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              { --scale
             
               --melodicminor halfskipping 4 noarp 3
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 139
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }, --/scale
              {  --scale
             
               --hungarianminor halfskipping 4 noarp 3
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 140
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             },--/skipping
             { --skipping
              { --scale
             
               --major skipping 4 noarp 3
               {{6,1}, {1,1}, {6,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 141
               {{7,3}, {5,3}, {7,3}, {5,3}, {7,3}, {5,3}, {7,3}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{7,11},{5,11},{7,11},{5,11},{7,11},{7,11},{5,11}},
               {{3,1}, {6,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}, {3,8}},
               {{5,1}, {6,1}, {5,1}, {6,1}, {3,1}, {5,1}, {3,1}},
               {{5,10},{7,4}, {5,10},{7,4}, {5,10},{5,10},{5,10}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {2,1}, {6,1}, {6,1}},
               {{2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}, {2,6}},
               {{7,1}, {3,1}, {7,1}, {3,1}, {7,1}, {3,1}, {3,1}}
              },--/scale
              {--scale
             
               --harmonicminor skipping 4 noarp 3
               {{4,1}, {1,1}, {4,1}, {1,1}, {4,1}, {1,1}, {4,1}}, -- 142
               {{5,7}, {6,6}, {5,7}, {6,6}, {5,7}, {6,6}, {5,7}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {4,1}, {3,1}, {4,1}, {3,1}, {4,1}},
               {{3,10},{5,10},{5,10},{3,10},{5,10},{3,10},{5,10}},
               {{4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}, {4,4}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{4,1}, {6,1}, {4,1}, {6,1}, {4,1}, {4,1}, {6,1}},
               {{4,10},{4,10},{4,10},{4,10},{4,10},{4,10},{4,10}},
               {{5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}, {5,4}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },--/scale
              {  --scale
             
               --melodicminor skipping 4 noarp 3
               {{2,1}, {1,1}, {2,1}, {1,1}, {2,1}, {1,1}, {2,1}}, -- 143
               {{3,11},{3,11},{1,3}, {3,11},{1,3}, {3,11},{1,3}},
               {{2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}},
               {{2,1}, {4,1}, {2,1}, {2,1}, {4,1}, {2,1}, {4,1}},
               {{2,10},{2,10},{2,10},{2,10},{2,10},{2,10},{2,10}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}, {2,4}},
               {{2,1}, {6,1}, {2,1}, {6,1}, {2,1}, {2,1}, {6,1}},
               {{2,11},{2,11},{2,11},{2,11},{2,11},{2,11},{2,11}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              },  --/scale
              {  --scale
             
               --hungarianminor skipping 4 noarp 3
               {{1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {1,1}, {2,1}}, -- 144
               {{4,8}, {1,2}, {4,8}, {1,2}, {2,12},{4,8}, {4,6}},
               {{3,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}, {2,1}},
               {{3,1}, {4,1}, {3,1}, {3,1}, {3,1}, {3,1}, {3,1}},
               {{1,5}, {4,9}, {1,5}, {6,9}, {1,5}, {1,5}, {4,9}},
               {{4,12},{7,7}, {4,12},{7,7}, {4,12},{7,7}, {4,12}},
               {{4,1}, {4,1}, {5,1}, {4,1}, {4,1}, {4,1}, {4,1}},
               {{5,1}, {5,1}, {5,1}, {6,1}, {5,1}, {5,1}, {5,1}},
               {{6,1}, {6,1}, {6,1}, {6,1}, {7,1}, {6,1}, {6,1}},
               {{7,2}, {4,7}, {4,4}, {4,4}, {4,4}, {7,2}, {4,4}},
               {{3,9}, {7,5}, {5,9}, {7,5}, {5,9}, {7,5}, {5,5}},
               {{7,1}, {7,1}, {7,1}, {7,1}, {7,1}, {1,1}, {7,1}}
              }  --/scale
             } --/skipping          
            } --/polyphony           
           } --/noarp          
          } --/priorities
         } --/matrix
          --print(matrix1[conf][noarp][voices][skipping][family][note][chord][chord/key]) 
 matrix2={
          {{0,4,7,11},      --major
           {2,5,9,12},
           {4,7,11,14},
           {5,9,12,16},
           {7,11,14,17},
           {9,12,16,19},
           {11,14,17,21}},
            
          {{0,3,7,11},      --harmonic minor
           {2,5,8,12},
           {3,7,11,14},
           {5,8,12,15},
           {7,11,14,17},
           {8,12,15,19},
           {11,14,17,20}},
           
          {{0,3,7,11},      --melodic minor
           {2,5,9,12},
           {3,7,11,14},
           {5,9,12,15},
           {7,11,14,17},
           {9,12,15,19},
           {11,14,17,21}},
           
          {{0,3,7,11},      --hungarian minor
           {2,6,8,12},
           {3,7,11,14},
           {6,8,12,15},
           {7,11,14,18},
           {8,12,15,19},
           {11,14,18,20}}
           
          }
              --print(matrix2[family][chord][voice])
 matrix3={
          {{1,1}, {3,10},{2,1}, {4,11},{3,1}, {4,1}, {3,3}, {5,1}, {4,4}, {6,1}, {4,6}, {7,1}}, --major
          {{1,1}, {5,7}, {2,1}, {3,1}, {5,10},{4,1}, {1,7}, {5,1}, {6,1}, {1,10},{5,4}, {7,1}}, --harmonic minor
          {{1,1}, {4,9}, {2,1}, {3,1}, {2,3}, {4,1}, {1,7}, {5,1}, {1,9}, {6,1}, {4,6}, {7,1}}, --melodic minor
          {{1,1}, {5,7}, {2,1}, {3,1}, {6,9}, {7,7}, {4,1}, {5,1}, {6,1}, {1,10},{5,4}, {7,1}} --hungarian minor

         }
             --print(matrix3[family][note][chord/key])
end

function returnnthkey(n)
 if n==1 then return dvb.views.ppp1.value end
 if n==2 then return dvb.views.ppp2.value end
 if n==3 then return dvb.views.ppp3.value end
 if n==4 then return dvb.views.ppp4.value end
 if n==5 then return dvb.views.ppp5.value end
 if n==6 then return dvb.views.ppp6.value end
 if n==7 then return dvb.views.ppp7.value end
 if n==8 then return dvb.views.ppp8.value end
 if n==9 then return dvb.views.ppp9.value end
 if n==10 then return dvb.views.ppp10.value end
 if n==11 then return dvb.views.ppp11.value end
 if n==12 then return dvb.views.ppp12.value end
end

function cmp3(t11,t12,t13,t21,t22,t23)
 local ile=0
 --[[
 print(" ")
 print("t11: "..t11)
 print("t12: "..t12)
 print("t13: "..t13)
 print("t21: "..t21)
 print("t22: "..t22)
 print("t23: "..t23)

 print(" ")
 print("t11-t21: "..math.abs(math.fmod(t11-t21,12)))
 print("t12-t21: "..math.abs(math.fmod(t12-t21,12)))
 print("t12-t22: "..math.abs(math.fmod(t12-t22,12)))
 print("t13-t21: "..math.abs(math.fmod(t13-t21,12)))
 print("t13-t22: "..math.abs(math.fmod(t13-t22,12)))
 print("t13-t23: "..math.abs(math.fmod(t13-t23,12))) ]]
 --if math.abs(math.fmod(12+t11-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t12-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t12-t22,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t22,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t23,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t21,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t22,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t23,12))==0 then ile=ile+1 end
 --[[]]if math.abs(math.fmod(12+t12-t21,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t12-t22,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t12-t23,12))==0 then ile=ile+1 end
 --[[]]if math.abs(math.fmod(12+t13-t21,12))==0 then ile=ile+1 end  
 --[[]]if math.abs(math.fmod(12+t13-t22,12))==0 then ile=ile+1 end 
 if math.abs(math.fmod(12+t13-t23,12))==0 then ile=ile+1 end 
 return ile
end

function cmp4(t11,t12,t13,t14,t21,t22,t23,t24)
 local ile=0
 --if math.abs(math.fmod(12+t11-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t12-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t12-t22,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t22,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t13-t23,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t14-t21,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t14-t22,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t14-t23,12))==0 then ile=ile+1 end
 --if math.abs(math.fmod(12+t14-t24,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t21,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t22,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t23,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t11-t24,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t12-t21,12))==0 then ile=ile+1 end  
 if math.abs(math.fmod(12+t12-t22,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t12-t23,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t12-t24,12))==0 then ile=ile+1 end 
 if math.abs(math.fmod(12+t13-t21,12))==0 then ile=ile+1 end 
 if math.abs(math.fmod(12+t13-t22,12))==0 then ile=ile+1 end 
 if math.abs(math.fmod(12+t13-t23,12))==0 then ile=ile+1 end 
 if math.abs(math.fmod(12+t13-t24,12))==0 then ile=ile+1 end
 if math.abs(math.fmod(12+t14-t21,12))==0 then ile=ile+1 end  
 if math.abs(math.fmod(12+t14-t22,12))==0 then ile=ile+1 end  
 if math.abs(math.fmod(12+t14-t23,12))==0 then ile=ile+1 end    
 if math.abs(math.fmod(12+t14-t24,12))==0 then ile=ile+1 end   
 return ile
end

function findbestcontainingcf(cmode,noteoffset,offset,chord,note,ppc)

 local results={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}
 local resultsb={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}
 local passes={0,0,0,0,0,0,0,0,0,0,0,0}
 local a
 local max=-1
 local maxat=-1
 local ile=0
 local b
 local c
 local grananuta
 
-- print("chord: "..chord)
 --print("note: "..note)
 --print("offset: "..offset) --b
 --print("noteoffset: "..noteoffset) --a
 --print("mode: "..cmode)
 for a=1,ppc do
  if (vb.views.voices.value==0) then
  
   if ( ( math.fmod(chordsbasic[1][a],12)==note) or (math.fmod( chordsbasic[2][a],12) ==note) or ( math.fmod(chordsbasic[3][a],12)==note) ) then
   --               --------------------                       ---------------------                         --------------------
   --    --------------------------------------      ---------------------------------------      --------------------------------------
    --results[a]=cmp3(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord])
    results[a]=cmp3(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord])
   end
  end
  
  if (vb.views.voices.value==1) then
   if ((math.fmod(chordsbasic[1][a],12)==note) or (math.fmod(chordsbasic[2][a],12)==note) or (math.fmod(chordsbasic[3][a],12)==note) or (math.fmod(chordsbasic[4][a],12)==note)) then
    results[a]=cmp4(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[4][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord],chordsbasic[4][chord])
   end
  end  
  
 end
 
 --print(" ")
--akordy, które mają przynajmniej jeden ton wspólny z poprzednim akordem
 --print("pierwsze kryterium")
 for a=1,12 do
  --print(results[a])
  if cmode==0 then
   if results[a]>0 then  -->-1
    passes[a]=1
   end
  else
   if results[a]>-1 then  -->-1
    passes[a]=1
   end
  end
 end
 --print("findbestcontainingcf")

 for a=1,12 do
  if passes[a]==1 then
   ile=ile+1
   maxat=a
  end
 end

 --print(ile)
 --rprint(passes)
 --rprint(results)
 --print("akord: "..math.fmod(maxat+offset-2,7)+1)
 --for a=1,7 do
 -- print("akord: "..math.fmod(a+offset-2,7)+1) 
 --end 
 --ile=1
 if ile==1 then
  return maxat
 end 
 
--akordy, które są najbardziej konsonansowe
--print("drugie kryterium")
 max=10000
 maxat=-1
 for a=1,7 do
  b=math.fmod(offset+a-2,7)+1
  --print("chord: "..b)
  if  (vb.views.voices.value==0) then
   c=checkdissonance(chordsbasic[1][b],chordsbasic[2][b],chordsbasic[3][b],nil,3)
  else
   c=checkdissonance(chordsbasic[1][b],chordsbasic[2][b],chordsbasic[3][b],chordsbasic[4][b],4)
  end  
  --print("dissonance: "..c)
  resultsb[a]=c
 end

 for a=1,7 do
   if resultsb[a]<max and passes[a]==1 then
   max=resultsb[a]
   maxat=a
   --print("maxat: "..maxat)
  end
 end
 
 for a=1,7 do
  if resultsb[a]==max and passes[a]==1 then
   passes[a]=1
  else
   passes[a]=0
  end
 end
 ile=0
 for a=0,12 do
  if passes[a]==1 then ile=ile+1 end
 end

 --print(ile)
 --rprint(passes)
 --rprint(resultsb)
 --rprint(results)
 
 if ile==1 then
  --print("maxat: "..maxat)
  return maxat
 end 

--akordy, które mają najwięcej tonów wspólnych z poprzednim akordem

 --print("trzecie kryterium")
 max=-1
 ile=0
 for a=1,7 do
  if results[a]>max and passes[a]==1 then
   max=results[a]
   maxat=a
  end 
 end
 for a=1,7 do
  if results[a]==max and passes[a]==1 then
   passes[a]=1
   ile=ile+1
  else
   passes[a]=0
  end
 end

 --print(ile)
 --rprint(passes)
 --rprint(resultsb)
 --rprint(results)
 
 if ile==1 then
  --print("maxat: "..maxat)
  return maxat
 end  
  
 --akordy, które mają wybraną nutę w najniższym głosie
 --print("czwarte kryterium") 

 grananuta=chordsbasic[1][math.fmod(offset+noteoffset-2,7)+1]
 --print("grananuta: "..grananuta)
 max=3
 for a=1,7 do
  c=5
  b=math.fmod(offset+a-2,7)+1
  --print(chordsbasic[1][b].." "..chordsbasic[2][b].." "..chordsbasic[3][b])  
  if grananuta==math.fmod(chordsbasic[1][b],12) then c=1 end
  if grananuta==math.fmod(chordsbasic[2][b],12) then c=2 end
  if grananuta==math.fmod(chordsbasic[3][b],12) then c=3 end
  if grananuta==math.fmod(chordsbasic[4][b],12) and (vb.views.voices.value==1) then c=4 end
  resultsb[a]=c
  if c<max and passes[a]==1 then
   max=c
   maxat=a
  end
 end
 for a=1,7 do
  if resultsb[a]==max and passes[a]==1 then
   passes[a]=1
  else
   passes[a]=0
  end
 end 
 ile=0
 for a=0,12 do
  if passes[a]==1 then ile=ile+1 end
 end 
 

 --print(ile)
 --rprint(passes)
 --rprint(resultsb)

 if ile==1 then
  return maxat
 end

 -- return maxat
 --return -1

 print("potrzebne jeszcze jedno kryterium")
 print(maxat)


--akordy, które są najniższe

 
end

function findbestcontaining(chord,note,ppc)

 local results={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}
 local a
 local max=-1
 local maxat=-1
 
 for a=1,ppc do
  if (vb.views.voices.value==0) then
  
   if ( ( math.fmod(chordsbasic[1][a],12)==note) or (math.fmod( chordsbasic[2][a],12) ==note) or ( math.fmod(chordsbasic[3][a],12)==note) ) then
   --               --------------------                       ---------------------                         --------------------
   --    --------------------------------------      ---------------------------------------      --------------------------------------
    --results[a]=cmp3(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord])
    results[a]=cmp3(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord])
   end
  end
  
  if (vb.views.voices.value==1) then
   if ((math.fmod(chordsbasic[1][a],12)==note) or (math.fmod(chordsbasic[2][a],12)==note) or (math.fmod(chordsbasic[3][a],12)==note) or (math.fmod(chordsbasic[4][a],12)==note)) then
    results[a]=cmp4(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[4][a],chordsbasic[1][chord],chordsbasic[2][chord],chordsbasic[3][chord],chordsbasic[4][chord])
   end
  end  
  
 end
 
 --print(" ")
 
 for a=1,12 do
  --print(results[a])
  if results[a]>max then
   max=results[a]
   maxat=a
  end
 end
 return maxat
end

function findbestchordcf(ton,akord,mode)
local bakord=-1
local btonacja=-1
local a,b,c,d
local suma=0
local maxx=-1
local ille=1
local illee=0
local cl={}
local bl={}
local al={}
local dl={}
local wl={}
local tones1={}
local tones2={}
local tones3={}
local interwals={}
local commons={}
local ilea={}
--local dupa=-1
--tablica
--tablica2
--[[

poprzednia wersja progressora dla akordów poza tonacją:
akordy ktore mają najwięcej tonow wspolnych z akordem poprzednim
sprawdz ile tonow ma kazdy z akordow w podstawowej tonacji
sprawdz ile tonow wspolnych ma tonacja podstawowa z tonacja w ktorej znajduje sie akord
sprawdź brzmienie interwalow w akordzie
--tu wstawiamy
kolejne kryterium w ktorym przechodza akordy nizsze

nowa wersja progressora akordy poza tonacją wersja 1:
akordy, które mają przynajmniej jeden ton wspólny z poprzednim akordem
akordy, które mają najwięcej tonów w wybranej tonacji
akordy, których tonacja ma najwięcej tonów wspólnych z wybraną tonacją
akordy, które są najbardziej konsonansowe
 akordy, które mają najwięcej tonów wspólnych z wybranym akordem
 akordy, które mają wybraną nutę w najniższym głosie
akordy, które są najniższe

nowa wersja progressora akordy poza tonacją wersja 2:
wszystkie akordy zawierające daną nutę
akordy, które mają najwięcej tonów w wybranej tonacji
akordy, których tonacja ma najwięcej tonów wspólnych z wybraną tonacją
akordy, które są najbardziej konsonansowe
 akordy, które mają najwięcej tonów wspólnych z wybranym akordem
 akordy, które mają wybraną nutę w najniższym głosie
akordy, które są najniższe

]]
 --print("findbestchordcf")
 
 -- akordy ktore mają najwięcej tonow wspolnych z akordem poprzednim

 -- ile tonow wspolnych ma kazdy z akordow z poprzednim akordem

 --
--  rprint(wl)
 for a=1,linia*12 do
  if tablica[a][ton]=="x" then
   suma=0
   for b=1,vcesnmbr do
    if tablica2[a][(akord-1)*vcesnmbr+b]=="x" then
     suma=suma+1
    end
   end
   tablica[a][ton]=suma
   commons[a]=suma
   --print(tablica[a][ton])
   maxx=math.max(maxx,suma)
  else
   commons[a]=-1
  end 
 end
 
 --print("max: "..maxx)
 
 --print("commons: ")
 --rprint(commons)
 
 for a=1,linia*12 do
  for b=1,4 do
   tablica3[a][b]=-1
  end
 end
 
 for a=1,linia*12 do
  --print(tablica[a][ton].." "..maxx)
  if mode==0 then
   if tablica[a][ton]>0 then--[[==maxx then]] -- >0
    --print("kuku")
    --print("a: "..a)
    --print("mod: "..math.fmod(a-1,linia)+1)
    --print(chordssimple[math.fmod(a-1,linia)+1][1])
    --print(chordssimple[math.fmod(a-1,linia)+1][2])
    --print(chordssimple[math.fmod(a-1,linia)+1][3])  
    --rprint(chordssimple) 
    for b=1,vcesnmbr do
     tablica3[ille][b]=chordssimpleo[math.fmod(a-1,linia)+1][b]+math.floor((a-1)/linia)
    end
    ilea[ille]=a
    ille=ille+1
   end
  else
   if (tablica[a][ton]>0) or (tablica[a][ton]==0) then--[[==maxx then]] -- >0
    --print("kuku")
    --print("a: "..a)
    --print("mod: "..math.fmod(a-1,linia)+1)
    --print(chordssimple[math.fmod(a-1,linia)+1][1])
    --print(chordssimple[math.fmod(a-1,linia)+1][2])
    --print(chordssimple[math.fmod(a-1,linia)+1][3])  
    --rprint(chordssimple) 
    for b=1,vcesnmbr do
     tablica3[ille][b]=chordssimpleo[math.fmod(a-1,linia)+1][b]+math.floor((a-1)/linia)
    end
    ilea[ille]=a
    ille=ille+1
   end  
  end  
 end

 
 for a=1,linia*12 do
  if tablica[a][ton]>-1 then
   tablica[a][ton]="x"
  end 
 end 
 
 --rprint(chordsbasic)
 -- rprint(wl)
 for c=1,ille-1  do
  for a=1,12 do
   for b=1,7 do
    if ((vcesnmbr==3) and (math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[3][b]+a-1,12))
                      and (math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[3][b]+a-1,12))
                      and (math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[3][b]+a-1,12)))
                           
                           or

       ((vcesnmbr==4) and (math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[4][b]+a-1,12)))
    then
     --print("c: "..c.."/"..ille-1)
     --print("a: "..a)
     --print("b: "..b)
     --print(" ")
     illee=illee+1
     cl[illee]=c -- chord number in tablica3
     bl[illee]=b -- stopien w tonacji, akord
     al[illee]=a -- key
     wl[illee]=commons[ilea[c]]
    end                 
   end
  end
 end
 
 --print("przed pierwszym kryterium jest "..illee.." akordow")

--print("wl")
--rprint(wl)
--print("ilea")
--rprint(ilea)

 if illee==1 then return bl[1],al[1] end -- jesli tylko jeden akord spelnia kryterium to zwroc go
 
 --print("dalej")

 
 d=0                                          -- sprawdz ile tonow ma kazdy z akordow w podstawowej tonacji
 for c=1,illee do
  b=0
  for a=1,vcesnmbr do
   if returnnthkey(math.fmod(tablica3[cl[c]][a],12)+1)==true then
    b=b+1
   end
  end
  dl[c]=b
  d=math.max(d,b)
 end
 
 --print("max: "..d)
 
for c=1,illee do              -- usun akordy ktore maja mniej tonow w podstawowej tonacji
 if dl[c]<d then cl[c]=-1 end
end

  d=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po pierwszym kryterium jest "..d.." akordow")
  --d=1
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
  
  if d==1 then

   return bl[b],al[b]
  end
  
 --return bl[c],al[c]
 --print("niema returna")
-- sprawdz ile tonow wspolnych ma tonacja podstawowa z tonacja w ktorej znajduje sie akord

 for a=1,12 do
  tones1[a]=returnnthkey(a)
  tones2[a]=returnnthkey(a)
 end

 for a=1,12 do
  c=0
  for b=1,12 do
   if ((tones1[b]==tones2[b]) and tones1[b]==true) then c=c+1 end
  end
  d=tones2[12]
  tones2[12]=tones2[11]
  tones2[11]=tones2[10]
  tones2[10]=tones2[9]
  tones2[9]=tones2[8]
  tones2[8]=tones2[7]
  tones2[7]=tones2[6]
  tones2[6]=tones2[5]
  tones2[5]=tones2[4]
  tones2[4]=tones2[3]
  tones2[3]=tones2[2]
  tones2[2]=tones2[1]
  tones2[1]=d
  tones3[a]=c
 end

 --print("tones3:")
 --rprint(tones3)
 
 d=0
 for c=1,illee do
  if cl[c]>-1 then
   dl[c]=tones3[al[c]]
  d=math.max(d,dl[c]) -- przenioslem tu
  end
  --d=math.max(d,dl[c])
 end

 --print("max: "..d)

 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]<d then cl[c]=-1 end
  end
 end

 d=0
 b=0
 for c=1,illee do
  if cl[c]>-1 then d=d+1 b=c end
 end
 
 if d==1 then return bl[b],al[b] end

-- sprawdź brzmienie interwalow w akordzie


 interwals={512,9500,4750,3000,2750,2000,9000,1500,4000,2750,8200,9000}

 --interwals[]
 b=-1
 for c=1,illee do
  if cl[c]>-1 then
   d=0
   if vcesnmbr==3 then
    --print(interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1]) -- sekunda minus pryma
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1]) -- tercja minus sekunda
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1]) -- tercja minus pryma 
    --print(" ")
    d=math.max(d,interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])    
    --print(d)
    --print(" ")
   end
   if vcesnmbr==4 then
    --print(interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][2]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][3]+1])
    --print(" ")
    d=math.max(d,interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][1]+1])    
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][3]+1])   
    --print(d)
    --print(" ")   
   end
   dl[c]=d
   if b==-1 then
    b=d
   else
    b=math.min(b,d)
   end
  end
 end
 --print(b)
 
 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]>b then
    cl[c]=-1
   end
  end
 end
 
   d=0
   b=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po kryterium interwalowym jest "..d.." akordow")
  --d=1
  
  if d==1 then
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
   return bl[b],al[b]
  end

 -- akordy ktore maja najwiecej tonow wspolnych z porzednikiem
--[[
 print("akord: "..akord)
 print("ton: :"..ton)
 print("tablica3")
 rprint(tablica3)
 print("cl")
 rprint(cl)
 print("bl")
 rprint(bl)
 print("al")
 rprint(al)
 print("dl")
 rprint(dl)
 print("wl")
 rprint(wl)
 print(" ")]]
 maxx=-1
 b=0
 for c=1,illee do
  if cl[c]>-1 and wl[c]>maxx then
    maxx=wl[c]
  end
 end
 d=0
 for c=1,illee do
  if wl[c]==maxx and cl[c]>-1 then
   --print("c: "..c)
   --print(wl[c])
   --print(maxx)
   d=d+1
   b=c
  else
   cl[c]=-1
  end
 end
--[[
 print("d: "..d)
 print("po")
 
 print("akord: "..akord)
 print("ton: :"..ton)
 print("tablica3")
 rprint(tablica3)
 print("cl")
 rprint(cl)
 print("bl")
 rprint(bl)
 print("al")
 rprint(al)
 print("dl")
 rprint(dl)
 print("wl")
 rprint(wl)
 print(" ") 
]]
 if d==1 then return bl[b],al[b] end

 --akordy, które mają wybraną nutę w najniższym głosie
--[[
print("tu trzeba dopisać kryterium.")
print("akord: "..akord)
print("ton: "..ton)
print("d: "..d)]]
for c=1,illee do
 b=-1
 if cl[c]>-1 then
  if vcesnmbr==3 then
   if math.fmod(tablica3[cl[c]][1],12)==ton-1 then b=1  end
   if math.fmod(tablica3[cl[c]][2],12)==ton-1 then b=2  end  
   if math.fmod(tablica3[cl[c]][3],12)==ton-1 then b=3  end
  end 
  if vcesnmbr==4 then
   if math.fmod(tablica3[cl[c]][1],12)==ton-1 then b=1  end
   if math.fmod(tablica3[cl[c]][2],12)==ton-1 then b=2  end  
   if math.fmod(tablica3[cl[c]][3],12)==ton-1 then b=3  end
   if math.fmod(tablica3[cl[c]][4],12)==ton-1 then b=4  end
  end   
  dl[c]=b
 end
end

b=5
for c=1,illee do
 if cl[c]>-1 then
  if dl[c]<b then
   b=dl[c]
  end
 end
end

a=-1
d=0
for c=1,illee do
 if cl[c]>-1 then
  if dl[c]==b then
   d=d+1
   a=c
  else
   cl[c]=-1
  end
 end
end

if d==1 then return bl[a],al[a] end
--[[
print("potrzebne jeszcze jedno kryterium")
print("d: "..d)
 print("akord: "..akord)
 print("ton: :"..ton)
 print("tablica3")
 rprint(tablica3)
 print("cl")
 rprint(cl)
 print("bl")
 rprint(bl)
 print("al")
 rprint(al)
 print("dl")
 rprint(dl)
 print("wl")
 rprint(wl)
 print(" ")]]
 
--return -1,-1
--end
-- kolejne kryterium w ktorym przechodza akordy nizsze
 b=-1
 for c=1,illee do
  if cl[c]>-1 then
   d=0
   if vcesnmbr==3 then
    d=(tablica3[cl[c]][2]-tablica3[cl[c]][1]+tablica3[cl[c]][3]-tablica3[cl[c]][1])/3
   end
   if vcesnmbr==4 then
    d=(tablica3[cl[c]][2]-tablica3[cl[c]][1]+tablica3[cl[c]][3]-tablica3[cl[c]][1]+tablica3[cl[c]][4]-tablica3[cl[c]][1])/4
   end
   dl[c]=d
   if b==-1 then
    b=d
   else
    b=math.min(b,d)
   end
  end
 end
 
 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]>b then
    cl[c]=-1
   end
  end
 end
 
   d=0
   b=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po kryterium wysokosciowym jest "..d.." akordow")
  --d=1
  
 --if d==1 then
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
    --print("return b: "..b)
   return bl[b],al[b]
 --end
 
 --[[
 print("tablica3")
 rprint(tablica3)
 print("cl")
 rprint(cl)
 print("bl")
 rprint(bl)
 print("al")
 rprint(al)
 print("dl")
 rprint(dl)
 
return bakord,btonacja]]
end


function findbestchord(ton,akord)
local bakord=-1
local btonacja=-1
local a,b,c,d
local suma=0
local maxx=-1
local ille=1
local illee=0
local cl={}
local bl={}
local al={}
local dl={}
local tones1={}
local tones2={}
local tones3={}
local interwals={}
--tablica
--tablica2
 print("findbestchord")
 for a=1,linia*12 do
  if tablica[a][ton]=="x" then
   suma=0
   for b=1,vcesnmbr do
    if tablica2[a][(akord-1)*vcesnmbr+b]=="x" then
     suma=suma+1
    end
   end
   tablica[a][ton]=suma
   --print(tablica[a][ton])
   maxx=math.max(maxx,suma)
  end 
 end

 --print("max: "..maxx)
 
 for a=1,linia*12 do
  for b=1,4 do
   tablica3[a][b]=-1
  end
 end
 
 for a=1,linia*12 do
  --print(tablica[a][ton].." "..maxx)
  if tablica[a][ton]==maxx then -- >0
   --print("kuku")
   --print("a: "..a)
   --print("mod: "..math.fmod(a-1,linia)+1)
   --print(chordssimple[math.fmod(a-1,linia)+1][1])
   --print(chordssimple[math.fmod(a-1,linia)+1][2])
   --print(chordssimple[math.fmod(a-1,linia)+1][3])  
   --rprint(chordssimple) 
   for b=1,vcesnmbr do
    tablica3[ille][b]=chordssimpleo[math.fmod(a-1,linia)+1][b]+math.floor((a-1)/linia)
   end
   ille=ille+1
  end
 end
 
 for a=1,linia*12 do
  if tablica[a][ton]>-1 then
   tablica[a][ton]="x"
  end 
 end 
 
 --rprint(chordsbasic)

 for c=1,ille-1  do
  for a=1,12 do
   for b=1,7 do
    if ((vcesnmbr==3) and (math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[3][b]+a-1,12))
                      and (math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[3][b]+a-1,12))
                      and (math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[3][b]+a-1,12)))
                           
                           or

       ((vcesnmbr==4) and (math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][1],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][2],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][3],12)==math.fmod(chordsbasic[4][b]+a-1,12))
                      and (math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[1][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[2][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[3][b]+a-1,12) or
                           math.fmod(tablica3[c][4],12)==math.fmod(chordsbasic[4][b]+a-1,12)))
    then
     --print("c: "..c.."/"..ille-1)
     --print("a: "..a)
     --print("b: "..b)
     --print(" ")
     illee=illee+1
     cl[illee]=c -- chord number in tablica3
     bl[illee]=b -- stopien w tonacji, akord
     al[illee]=a -- key
    end                 
   end
  end
 end
 
 --print("przed pierwszym kryterium jest "..illee.." akordow")

 if illee==1 then return bl[1],al[1] end -- jesli tylko jeden akord spelnia kryterium to zwroc go
 
 --print("dalej")
 
 d=0                                          -- sprawdz ile tonow ma kazdy z akordow w podstawowej tonacji
 for c=1,illee do
  b=0
  for a=1,vcesnmbr do
   if returnnthkey(math.fmod(tablica3[cl[c]][a],12)+1)==true then
    b=b+1
   end
  end
  dl[c]=b
  d=math.max(d,b)
 end
 
 --print("max: "..d)
 
for c=1,illee do              -- usun akordy ktore maja mniej tonow w podstawowej tonacji
 if dl[c]<d then cl[c]=-1 end
end

  d=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po pierwszym kryterium jest "..d.." akordow")
  --d=1
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
  
  if d==1 then

   return bl[b],al[b]
  end
  
 --return bl[c],al[c]
 --print("niema returna")
-- sprawdz ile tonow wspolnych ma tonacja podstawowa z tonacja w ktorej znajduje sie akord

 for a=1,12 do
  tones1[a]=returnnthkey(a)
  tones2[a]=returnnthkey(a)
 end

 for a=1,12 do
  c=0
  for b=1,12 do
   if ((tones1[b]==tones2[b]) and tones1[b]==true) then c=c+1 end
  end
  d=tones2[12]
  tones2[12]=tones2[11]
  tones2[11]=tones2[10]
  tones2[10]=tones2[9]
  tones2[9]=tones2[8]
  tones2[8]=tones2[7]
  tones2[7]=tones2[6]
  tones2[6]=tones2[5]
  tones2[5]=tones2[4]
  tones2[4]=tones2[3]
  tones2[3]=tones2[2]
  tones2[2]=tones2[1]
  tones2[1]=d
  tones3[a]=c
 end

 --print("tones3:")
 --rprint(tones3)
 
 d=0
 for c=1,illee do
  if cl[c]>-1 then
   dl[c]=tones3[al[c]]
  d=math.max(d,dl[c]) -- przenioslem tu
  end
  --d=math.max(d,dl[c])
 end

 --print("max: "..d)

 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]<d then cl[c]=-1 end
  end
 end

 d=0
 b=0
 for c=1,illee do
  if cl[c]>-1 then d=d+1 b=c end
 end
 
 if d==1 then return bl[b],al[b] end
-- sprawdź brzmienie interwalow w akordzie
 interwals={512,9500,4750,3000,2750,2000,9000,1500,4000,2750,8200,9000}

 --interwals[]
 b=-1
 for c=1,illee do
  if cl[c]>-1 then
   d=0
   if vcesnmbr==3 then
    --print(interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1]) -- sekunda minus pryma
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1]) -- tercja minus sekunda
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1]) -- tercja minus pryma 
    --print(" ")
    d=math.max(d,interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])    
    --print(d)
    --print(" ")
   end
   if vcesnmbr==4 then
    --print(interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][1]+1])
    --print(interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][2]+1])
    --print(interwals[tablica3[cl[c]][4]-tablica3[cl[c]][3]+1])
    --print(" ")
    d=math.max(d,interwals[tablica3[cl[c]][2]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][1]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][1]+1])    
    d=math.max(d,interwals[tablica3[cl[c]][3]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][2]+1])
    d=math.max(d,interwals[tablica3[cl[c]][4]-tablica3[cl[c]][3]+1])   
    --print(d)
    --print(" ")   
   end
   dl[c]=d
   if b==-1 then
    b=d
   else
    b=math.min(b,d)
   end
  end
 end
 --print(b)
 
 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]>b then
    cl[c]=-1
   end
  end
 end
 
   d=0
   b=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po kryterium interwalowym jest "..d.." akordow")
  --d=1
  
  if d==1 then
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
   return bl[b],al[b]
  end
-- kolejne kryterium w ktorym przechodza akordy nizsze
 b=-1
 for c=1,illee do
  if cl[c]>-1 then
   d=0
   if vcesnmbr==3 then
    d=(tablica3[cl[c]][2]-tablica3[cl[c]][1]+tablica3[cl[c]][3]-tablica3[cl[c]][1])/3
   end
   if vcesnmbr==4 then
    d=(tablica3[cl[c]][2]-tablica3[cl[c]][1]+tablica3[cl[c]][3]-tablica3[cl[c]][1]+tablica3[cl[c]][4]-tablica3[cl[c]][1])/4
   end
   dl[c]=d
   if b==-1 then
    b=d
   else
    b=math.min(b,d)
   end
  end
 end
 
 for c=1,illee do
  if cl[c]>-1 then
   if dl[c]>b then
    cl[c]=-1
   end
  end
 end
 
   d=0
   b=0
  for c=1,illee do
   if cl[c]>-1 then d=d+1 b=c end
  end
  
  --print("po kryterium wysokosciowym jest "..d.." akordow")
  --d=1
  
 --if d==1 then
 --print("tablica3")
 --rprint(tablica3)
 --  print("cl")
 --rprint(cl)
 --print("bl")
 --rprint(bl)
 --print("al")
 --rprint(al)
 --print("dl")
 --rprint(dl)
   return bl[b],al[b]
 --end
 
 --[[
 print("tablica3")
 rprint(tablica3)
 print("cl")
 rprint(cl)
 print("bl")
 rprint(bl)
 print("al")
 rprint(al)
 print("dl")
 rprint(dl)
 
return bakord,btonacja]]
end

function checkdissonance(t1,t2,t3,t4,vn)
local weights,max
weights={512,9500,4750,3000,2750,2000,9000,1500,4000,2750,8200,9000}
 max=-1
 if vn==3 then
  max=math.max(max,weights[t2-t1+1])
  max=math.max(max,weights[t3-t2+1])
  max=math.max(max,weights[t3-t1+1])  
 end
 if vn==4 then
  max=math.max(max,weights[t2-t1+1])
  max=math.max(max,weights[t3-t2+1])
  max=math.max(max,weights[t4-t3+1])
  max=math.max(max,weights[t3-t1+1])
  max=math.max(max,weights[t4-t2+1])
  max=math.max(max,weights[t4-t1+1])
 end
 return max
end

function findbestbeginning(tone,v)
 local bchord=-1
 local bkey=-2
 local ilosc=0
 local cl={}
 local bl={}
 local al={}
 local dl={}
 local a,b,c,d
 local tones1={}
 local tones2={}
 local tones3={}

 tone=tone-1
 for a=1,12 do
  for b=1,7 do
   if math.fmod(chordsbasic[1][b]+a-1,12)==tone then
    ilosc=ilosc+1

    bl[ilosc]=b -- ktory akord
    al[ilosc]=a -- w ktorej tonacji
   end
  end
 end
 -- dissonance
 b=-1
 for c=1,ilosc do

  dl[c]=checkdissonance(chordsbasic[1][bl[c]]+al[c]-1,chordsbasic[2][bl[c]]+al[c]-1,chordsbasic[3][bl[c]]+al[c]-1,chordsbasic[4][bl[c]]+al[c]-1,v)
    --print("key:")
    --print(al[c])
    --print("chord:")
    --print(bl[c])
    --print("dissnc:")
    --print(dl[c])
    --print(" ")
    if b==-1 then
     b=dl[c]
    else
     b=math.min(b,dl[c])
    end
 end
 --print("min: ")
 --print(b)

 for a=1,ilosc do
  if dl[a]>b then
   al[a]=-1
   bl[a]=-1
  end
    --print("key:")
    --print(al[a])
    --print("chord:")
    --print(bl[a])
    --print("dissnc:")
    --print(dl[a])
    --print(" ")    
 end

   d=0
  for c=1,ilosc do
   if al[c]>-1 then d=d+1 b=c end
  end
  
  if d==1 then
   return bl[b],al[b]
  end
 d=0
 for a=1,ilosc do                              -- sprawdz ile tonow ma kazdy z akordow w podstawowej tonacji
  if al[a]>-1 then
   c=0
   --print("v: "..v)
   for b=1,v do
    if returnnthkey(math.fmod(chordsbasic[b][bl[a]]+al[a]-1,12)+1)==true then
     c=c+1
    end
   end
   dl[a]=c
   --print("a: "..a)
   --print("c: "..c)
   d=math.max(d,c)
  end
 end 
 --print("max: "..d)
 c=0
 for a=1,ilosc do
  if al[a]>-1 then
  if dl[a]<d then
   al[a]=-1
   bl[a]=-1
  else
   c=c+1
  end
  end
    --print("key:")
    --print(al[a])
    --print("chord:")
    --print(bl[a])
    --print("wspolnych:")
    --print(dl[a])
    --print(" ") 
 end
 --print("zostaje: "..c)
 if c==1 then
   return bl[b],al[b]
  end

 for a=1,12 do                -- ile tonow wspolnych ma tonacja z podstawowa tonacja
  tones1[a]=returnnthkey(a)
  tones2[a]=returnnthkey(a)
 end

 for a=1,12 do
  c=0
  for b=1,12 do
   if ((tones1[b]==tones2[b]) and tones1[b]==true) then c=c+1 end
  end
  d=tones2[12]
  tones2[12]=tones2[11]
  tones2[11]=tones2[10]
  tones2[10]=tones2[9]
  tones2[9]=tones2[8]
  tones2[8]=tones2[7]
  tones2[7]=tones2[6]
  tones2[6]=tones2[5]
  tones2[5]=tones2[4]
  tones2[4]=tones2[3]
  tones2[3]=tones2[2]
  tones2[2]=tones2[1]
  tones2[1]=d
  tones3[a]=c
 end

 --print("tones3:")
 --rprint(tones3)
 
 d=0
 for c=1,ilosc do
  if al[c]>-1 then
   dl[c]=tones3[al[c]]
   --print("c: "..c)
   --print("d: "..dl[c])
   d=math.max(d,dl[c])
  end
 end

 --print("max: "..d)

 for c=1,ilosc do
  if dl[c]<d then
   al[c]=-1
   bl[c]=-1
  end
 end
 
 c=0
 b=0
 for a=1,ilosc do
  if al[a]>-1 then
   c=c+1
   b=a
  end
 end
 --print("ile: "..c)

 return bl[b],al[b]
 --return bchord,bkey
end

function makearray()--haidong hainan method core

 local a,b,c
 local s=""
 
 print("chords:")
 
 for a=1,12 do
  if returnnthkey(a)==true then pipi[pipic]=a-1 pipic=pipic+1 end
 end
 
 print("number of tones in scale: "..pipic-1)
 
 for a=1,pipic-1 do
  print("tone nr."..a.." - "..pipi[a])
 end
 
 print(" ")
 
 for a=1,pipic-1 do
  pipi[pipic+a-1]=pipi[a]+12
 end

 b=2*(pipic-1)

 for a=pipic,b do
  print("tone nr."..a.." - "..pipi[a])
 end 

 print(" ")
 
 print("matrix2:")
 
 for a=1,pipic-1 do
  print(pipi[a]..","..pipi[a+2]..","..pipi[a+4]..","..pipi[a+6])
  chordsbasic[1][a]=pipi[a]
  chordsbasic[2][a]=pipi[a+2]
  chordsbasic[3][a]=pipi[a+4]
  chordsbasic[4][a]=pipi[a+6]  
 end
 
 --print(cmp3(chordsbasic[1][1],chordsbasic[2][1],chordsbasic[3][1],chordsbasic[1][3],chordsbasic[2][3],chordsbasic[3][3]))
 
 --print("najlepiej pasuje: "..findbestcontaining(1--[[grany akord]],11--[[nowy ton]],7--[[ile akordow przejrzec]]))
 --print(" ")
for b=1,7 do
  for a=1,pipic-1 do
  --b=1--b=4--b=5--akord w skali licząc od 1
  --a=3--a=1--a=7--nuta w skali licząc od 1 od prymy akordu b
 -- print("a: "..a)
 -- print("b: "..b)
  --print(pipic)
  --print(chordsbasic[1][a])
     if (vb.views.confirst.value==1) then
   --print(findbestcontaining(1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]]))
   mat1[chordsbasic[1][math.fmod(a+b-2,7)+1]+1][b][1]=math.fmod(findbestcontaining(1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]])+b-2,7)+1
     end
     
     if (vb.views.confirst.value==3) then --nodiss
   --print(findbestcontaining(1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]]))
   mat1[chordsbasic[1][math.fmod(a+b-2,7)+1]+1][b][1]=math.fmod(findbestcontainingcf(-1--[[cmode]],a--[[note offset]],b--[[offset]],1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]])+b-2,7)+1     
     end
     
     if (vb.views.confirst.value==2) then --confirst
   --print(findbestcontaining(1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]]))
   mat1[chordsbasic[1][math.fmod(a+b-2,7)+1]+1][b][1]=math.fmod(findbestcontainingcf(0--[[cmode]],a--[[note offset]],b--[[offset]],1--[[grany akord]],chordsbasic[1][a]--[[nowy ton]],7--[[ile akordow przejrzec]])+b-2,7)+1
     end
    

   mat1[chordsbasic[1][math.fmod(a+b-2,7)+1]+1][b][2]=1  
   --print(chordsbasic[1][a])
  end
 end

 if vb.views.voices.value==0 then vcesnmbr=3 end 
 if vb.views.voices.value==1 then vcesnmbr=4 end 

 for a=1,7 do
  for b=1,vcesnmbr do
   chordssimple[a][b]=chordsbasic[b][a]-chordsbasic[1][a]
  end
 end

 for a=1,6 do
  for b=a+1,7 do
   if chordssimple[a][1]==chordssimple[b][1] and chordssimple[a][2]==chordssimple[b][2] and chordssimple[a][3]==chordssimple[b][3] and chordssimple[a][4]==chordssimple[b][4] then
    chordssimple[b][1]=-1
    chordssimple[b][2]=-1
    chordssimple[b][3]=-1   
    chordssimple[b][4]=-1    
   end
  end
 end

--rprint(chordssimple)
--print(vcesnmbr)

 for a=1,7 do
  if chordssimple[a][1]>-1 then
   linia=linia+1
   for b=1,vcesnmbr do
    chordssimpleo[linia-1][b]=chordssimple[a][b]
   end
  end 
 end

 linia=linia-1
 
 --print("linia: "..linia)

 for a=1,linia*12 do
  tablica[a]={}
  for b=1,12 do
   tablica[a][b]=-1
  end
 end

 for a=1,7 do
  if chordssimple[a][1]>-1 then
   tablica[ln][chordssimple[a][1]+1]="x"
   tablica[ln][chordssimple[a][2]+1]="x"  
   tablica[ln][chordssimple[a][3]+1]="x"
   if vcesnmbr==4 then tablica[ln][chordssimple[a][4]+1]="x" end
   ln=ln+1
  end 
 end
 
 for a=1,linia do
  for b=2,12 do
   tablica[(b-1)*linia+(a-1)+1][1]=tablica[(b-2)*linia+(a-1)+1][12]
   tablica[(b-1)*linia+(a-1)+1][2]=tablica[(b-2)*linia+(a-1)+1][1]
   tablica[(b-1)*linia+(a-1)+1][3]=tablica[(b-2)*linia+(a-1)+1][2]
   tablica[(b-1)*linia+(a-1)+1][4]=tablica[(b-2)*linia+(a-1)+1][3]
   tablica[(b-1)*linia+(a-1)+1][5]=tablica[(b-2)*linia+(a-1)+1][4]
   tablica[(b-1)*linia+(a-1)+1][6]=tablica[(b-2)*linia+(a-1)+1][5]
   tablica[(b-1)*linia+(a-1)+1][7]=tablica[(b-2)*linia+(a-1)+1][6]
   tablica[(b-1)*linia+(a-1)+1][8]=tablica[(b-2)*linia+(a-1)+1][7]
   tablica[(b-1)*linia+(a-1)+1][9]=tablica[(b-2)*linia+(a-1)+1][8]
   tablica[(b-1)*linia+(a-1)+1][10]=tablica[(b-2)*linia+(a-1)+1][9]   
   tablica[(b-1)*linia+(a-1)+1][11]=tablica[(b-2)*linia+(a-1)+1][10]
   tablica[(b-1)*linia+(a-1)+1][12]=tablica[(b-2)*linia+(a-1)+1][11]
  end
 end

 for a=1,linia*12 do
  tablica2[a]={}
  for b=1,vcesnmbr*7 do
   tablica2[a][b]=-1
  end
 end
 
 --rprint(chordsbasic)

 for c=1,7 do
  for b=1,vcesnmbr do
   for a=1,linia*12 do
    tablica2[a][((c-1)*vcesnmbr)+b]=tablica[a][math.fmod(chordsbasic[b][c],12)+1]
    --print(a)
    --print(math.fmod(chordsbasic[c][b],12)+1)
    --print(chordsbasic[c][b])
    --print(tablica[a][math.fmod(chordsbasic[c][b],12)+1])
    --print(" ")
   end
  end
 end
 --rprint(chordssimple)
--rprint(tablica)
--rprint(tablica2)
--print(linia)

 for a=1,linia*12 do
  tablica3[a]={}
  for b=1,4 do
   tablica3[a][b]=-1
  end
 end

 for b=1,7 do
  for a=1,12 do

--7;4 1;9 6;9 7;9
--b=2 --akord
--a=4 --ton
   if returnnthkey(a)==false then
    --mat1[a][b][1]=-1
    --mat1[a][b][2]=-1
    if vb.views.confirst.value==1 then
     mat1[a][b][1],mat1[a][b][2]=findbestchord(a,b)
    end
     if vb.views.confirst.value==2 then
      mat1[a][b][1],mat1[a][b][2]=findbestchordcf(a,b,0)
     end
     if vb.views.confirst.value==3 then
      mat1[a][b][1],mat1[a][b][2]=findbestchordcf(a,b,-1)     
     end  
   end 
   mat2[a][b][1]=mat1[a][b][1]
   mat2[a][b][2]=mat1[a][b][2]
  end 
 end
--rprint(tablica3)

 --rprint(tablica)

 --rprint(mat1)
 print(" ")
 print("no skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat1[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s)
 

 for a=1,7 do
  mat1[chordsbasic[1][math.fmod(a-1+1,7)+1]+1][a][1]=a
  --print(chordsbasic[1][math.fmod(a-1+1,7)+1]+1)
 end
 
 print(" ")
 print("half skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat1[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s) 
 
 for a=1,7 do
  mat1[chordsbasic[1][math.fmod(a-1+3,7)+1]+1][a][1]=a
  --print(chordsbasic[1][math.fmod(a-1+3,7)+1]+1)
 end
 
 print(" ")
 print("skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat1[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s) 
 
 
 for b=1,7 do
  --print(checkdissonance(chordsbasic[1][b],chordsbasic[2][b],chordsbasic[3][b],chordsbasic[4][b],vcesnmbr))
  if checkdissonance(chordsbasic[1][b],chordsbasic[2][b],chordsbasic[3][b],chordsbasic[4][b],vcesnmbr)>3000 then
   mat2[chordsbasic[1][math.fmod(b-1+2,7)+1]+1][b][1]=math.fmod(b-1+2,7)+1 --tercja 3
   mat2[chordsbasic[1][math.fmod(b-1+4,7)+1]+1][b][1]=math.fmod(b-1+4,7)+1 --kwinta 5
   if vcesnmbr==4 then
    mat2[chordsbasic[1][math.fmod(b-1+6,7)+1]+1][b][1]=math.fmod(b-1+6,7)+1 --septyma 7 
   end
  end
 end
 
 print(" ")
 print("no arp")
 print("no skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat2[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s) 
 
 for a=1,7 do
  if checkdissonance(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[4][a],vcesnmbr)<3001 then
   mat2[chordsbasic[1][math.fmod(a-1+1,7)+1]+1][a][1]=a
  end
  --print(chordsbasic[1][math.fmod(a-1+1,7)+1]+1)
 end
 print(" ")
 print("half skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat2[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s) 
 
 for a=1,7 do
  if checkdissonance(chordsbasic[1][a],chordsbasic[2][a],chordsbasic[3][a],chordsbasic[4][a],vcesnmbr)<3001 then
   mat2[chordsbasic[1][math.fmod(a-1+3,7)+1]+1][a][1]=a
  end
  --print(chordsbasic[1][math.fmod(a-1+3,7)+1]+1)
 end

 print(" ")
 print("skipping")
 print("matrix1:")
 for c=1,12 do
  s=s.."{"
  for b=1,7 do
   s=s.."{"
   for a=1,2 do
    s=s..mat2[c][b][a]
    if a==1 then s=s.."," end
   end
   if b==7 then
    s=s.."}"
   else
    s=s.."},"
   end
  end
  if c==12 then
   s=s.."}"
  else
   s=s.."},"
  end  
  print(s)
   s=""
 end
 print(s) 

--print(mat3[family][note][chord/key])

 for a=1,7 do
  mat3[chordsbasic[1][a]+1][1]=a
  mat3[chordsbasic[1][a]+1][2]=1
 end

 for a=1,12 do
--a=2
  if returnnthkey(a)==false then
   mat3[a][1],mat3[a][2]=findbestbeginning(a,vcesnmbr)
  end
 end

 s="{"
 for a=1,12 do
  s=s.."{"
  for b=1,2 do
   s=s..mat3[a][b]
   if b==1 then
    s=s..","
   end
  end
  if a==12 then
   s=s.."}"
  else
   s=s.."},"
  end
 end
 s=s.."}"
 print(" ")
 print("matrix3:")
 print(s)

 
end

function devmode()
local devdialog = nil


--0
  dvb = renoise.ViewBuilder()
  
--1
  local first_row=dvb:horizontal_aligner {
   mode = "right",
    dvb:checkbox {
      id = "ppp1",
      width = 25,
      value = true,
      notifier = function()

      end
    },
    dvb:checkbox {
      id = "ppp2",
      width = 20,
      value = false,
      notifier = function()

      end
    },
    dvb:checkbox {
      id = "ppp3",
      width = 25,
      value = true,
      notifier = function()

      end
    },
    dvb:checkbox {
      id = "ppp4",
      width = 20,
      value = false,
      notifier = function()

      end
    },
    dvb:checkbox {
      id = "ppp5",
      width = 25,
      value = true,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp6",
      width = 25,
      value = true,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp7",
      width = 20,
      value = false,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp8",
      width = 25,
      value = true,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp9",
      width = 20,
      value = false,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp10",
      width = 25,
      value = true,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp11",
      width = 20,
      value = false,
      notifier = function()

      end
    },
        dvb:checkbox {
      id = "ppp12",
      width = 25,
      value = true,
      notifier = function()

      end
    },
        dvb:button {
      id = "ppp13",
      width = 20,
      text = "do",
      notifier = function()
       devdialog:close()
       control_example_dialog:close()
       makearray()
      end
    }
        
    
  }

--2
  local devdialog_content = dvb:column {
    margin = DIALOG_MARGIN,
    uniform = true,
    first_row,
  }
  
--3
 if (devdialog and devdialog.visible) then 
  devdialog:show()
 else  
  devdialog = renoise.app():show_custom_dialog(
    "Progressor Developer Mode", devdialog_content
  )
  end
  
end

function findmatching(key, chord, note)
 local newkey
 local newchord
 local y

 --print('note: ',note)
-- print('key: ',key)
 y=math.fmod(12+note-key+1,12)+1
-- newkey=math.fmod(matrix1[conf][noarp][voices][skipping][vb.views.kindpopup.value][y][chord][2]+key-1-1,12)+1
 --print('conf: ',conf)
-- print('noarp: ',noarp)
-- print('voices: ',voices)
 --print('skipping: ',skipping)
-- print('vb.views.kindpopup.value: ',vb.views.kindpopup.value)
 --print('y: ',y)
-- print('chord: ',chord)
-- print('matrix1: ',matrix1[conf][noarp][voices][skipping][vb.views.kindpopup.value][y][chord][2])
 newkey=math.fmod(matrix1[conf][noarp][voices][skipping][vb.views.kindpopup.value][y][chord][2]+12+key-1-1,12)+1

 --print("noarp: "..noarp)
 newchord=matrix1[conf][noarp][voices][skipping][vb.views.kindpopup.value][y][chord][1]
 --print("newkey: "..newkey)
 --print("newchord: "..newchord)
 return newkey,newchord
end

function chord(key,chord,note)
 return math.fmod(matrix2[vb.views.kindpopup.value][chord][note]+key-1,12)  
end

function beginning(key,note)
 --print('begkey: ',key)
 --print('begnote: ',note)
 note=math.fmod(note,12)
 --print('1: ',matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][1])
 --print('2: ',math.fmod(12+matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][2]+key-1-1,12)+1)
 --return matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][1],matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][2]+key-1
 return matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][1],math.fmod(12+matrix3[vb.views.kindpopup.value][math.fmod(12+note-key+1,12)+1][2]+key-1-1,12)+1
end

function rotations(lnote,cnote,mode)
 local aaaa
 if mode==false then
  return cnote+renoise.song().transport.octave*12
 else
  while cnote<lnote do
   cnote=cnote+12
  end
  if cnote>119 then cnote=cnote-12 end
  return cnote
 end
end

function attachchords()
 local matchingkey
 local matchingchord
 local trackindex
 local note
 local instrument
 local start
 local pattern
 local wards
 local istart,iend,istep
 local lstart,lend,lstep
 local aa,ab,ac,ad
 local rots
 --print(matchingkey)
-- print(matchingchord)
 wards=vb.views.wards.value
 trackindex=renoise.song().selected_track_index
 skipping=vb.views.skp.value
 rots=vb.views.rotations.value
 --print(vb.views.noarp.value)
 if vb.views.noarp.value==true then noarp=2 else noarp=1 end
 conf=vb.views.confirst.value
 --print(conf)
 --print(noarp)
 renoise.song():insert_track_at(trackindex+1)
 if (vb.views.voices.value==0) then
  renoise.song().tracks[trackindex+1].visible_note_columns=3
  voices=1
 end
 if (vb.views.voices.value==1) then
  renoise.song().tracks[trackindex+1].visible_note_columns=4
  voices=2
 end
        --print(renoise.song().patterns[1].tracks[1].lines[1].note_columns[1].instrument_value)
        --renoise.song().patterns[1].tracks[1].lines[3].note_columns[1].note_value=120 
   start=1
   if wards==false then
    istart=vb.views.ps.value+1
    iend=vb.views.pe.value+1
    istep=1
   else
    istart=vb.views.pe.value+1
    iend=vb.views.ps.value+1
    istep=-1   
   end
   for i=istart,iend,istep do
    pattern=renoise.song().sequencer.pattern_sequence[i]
    if wards==false then
     lstart=1
     lend=renoise.song().patterns[pattern].number_of_lines
     lstep=1
    else
     lstart=renoise.song().patterns[pattern].number_of_lines
     lend=1
     lstep=-1
    end
    for line=lstart,lend,lstep do
    aa=renoise.song().patterns[pattern].tracks[trackindex].lines[line].note_columns[1].delay_value
   renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].delay_value=aa
     renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].delay_value=aa
     renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].delay_value=aa
     if voices==2 then
      renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].delay_value=aa
     end  
     if start==1 then
      note=renoise.song().patterns[pattern].tracks[trackindex].lines[line].note_columns[1].note_value
      if note==120 and vb.views.noteoffs.value==true then
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].note_value=120
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].note_value=120
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].note_value=120
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].note_value=120       
       end       
      end 
      if note<120 then
       start=3
       matchingchord,matchingkey=beginning(vb.views.popup.value--[[-1]]  ,renoise.song().patterns[pattern].tracks[trackindex].lines[line].note_columns[1].note_value)
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].note_value=rotations(note,chord(matchingkey,matchingchord,1),rots)
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].note_value=rotations(note,chord(matchingkey,matchingchord,2),rots)
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].note_value=rotations(note,chord(matchingkey,matchingchord,3),rots)
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].note_value=rotations(note,chord(matchingkey,matchingchord,4),rots)
       end
       instrument=renoise.song().selected_instrument_index-1
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].instrument_value=instrument
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].instrument_value=instrument
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].instrument_value=instrument
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].instrument_value=instrument       
       end         
       
       --line=line+1-- tu
      end
     end
     if start==2 then
      note=renoise.song().patterns[pattern].tracks[trackindex].lines[line].note_columns[1].note_value
      if note<120 then
       matchingkey,matchingchord=findmatching(matchingkey,matchingchord,math.fmod(note,12))
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].note_value=rotations(note,chord(matchingkey,matchingchord,1),rots)
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].note_value=rotations(note,chord(matchingkey,matchingchord,2),rots)
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].note_value=rotations(note,chord(matchingkey,matchingchord,3),rots)
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].note_value=rotations(note,chord(matchingkey,matchingchord,4),rots)
       end
       instrument=renoise.song().selected_instrument_index-1
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].instrument_value=instrument
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].instrument_value=instrument
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].instrument_value=instrument
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].instrument_value=instrument       
       end   
      end
      if note==120 and vb.views.noteoffs.value==true then
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[1].note_value=120
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[2].note_value=120
       renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[3].note_value=120
       if voices==2 then
        renoise.song().patterns[pattern].tracks[trackindex+1].lines[line].note_columns[4].note_value=120       
       end       
      end 
     end
     if start==3 then
      start=2
     end
    end 
   end
   if (start==1) then
    renoise.song():delete_track_at(trackindex+1)
    renoise.song().selected_track_index=trackindex
    renoise.app():show_error("No notes on selected track! Script uses selected instrument for sequencing chords and monophonic lead on selected track for note input.")
   end
   return start
end

function createinstrumentlist()
  for a=1,table.count(renoise.song().instruments) do
   instnamestable[a]=bit.tohex(a-1 ,2) .. " - " .. renoise.song().instruments[a].name
  end
end

function mainproc() ----------------------------------------------------------------------------------------here

  definearrays()
  createinstrumentlist()

  vb = renoise.ViewBuilder()
  local instrument_row=vb:horizontal_aligner {
   mode = "right",
   vb:text {
   width =80,
   text = "Instrument:"},
    vb:popup {
      id = "popup2",
      width = 120,
      value = renoise.song().selected_instrument_index,
      items =instnamestable,
      notifier = function()

      end
    }
  }
  local patternsstart_row = vb:horizontal_aligner {
    mode = "right",
      vb:text {
      width = 80,
      text = "Range:"
    },  
    vb:valuebox {
      id="ps",
      min = 0,
      max = renoise.song().transport.song_length.sequence-1,
      value = renoise.song().transport.playback_pos.sequence-1,
      notifier = function(value)
       if vb.views.ps.value>vb.views.pe.value then
        vb.views.pe.value=vb.views.ps.value
       end
      end
    },
      vb:valuebox {
      id="pe",
      min = 0,
      max = renoise.song().transport.song_length.sequence-1,
      value = renoise.song().transport.song_length.sequence-1,
      notifier = function(value)
       if vb.views.pe.value<vb.views.ps.value then
        vb.views.ps.value=vb.views.pe.value
       end
      end
    }
  }
  local algorythm = vb:horizontal_aligner {
    mode = "right",
    vb:text {
      width = 40,
      text = "Key:"
    },
    vb:popup {
      id = "popup",
      width = 40,
      value = 1,
      items = {--[["-", ]]"C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#" ,"B"},
      notifier = function(new_index)
      --[[
      if vb.views.popup.value>1 then
       popupmemory2=vb.views.popup.value
      else
       popupmemory1=vb.views.popup.value
      end
        if (vb.views.popup.value>1) and (vb.views.kindpopup.value<3) then
          vb.views.kindpopup.value=kindpopupmemory2
        end
         if (vb.views.kindpopup.value>2) and  (vb.views.popup.value==1) then
          vb.views.kindpopup.value=kindpopupmemory1
        end]]
      end
    }  ,
    vb:popup {
      id = "kindpopup",
      width = 120,
      value = 1,
      items = {--[["auto", "chromatic", ]]"major", "harmonic minor", "melodic minor", "hungarian minor"},
      notifier = function(new_index)
      --[[
        if vb.views.kindpopup.value>2 then
         kindpopupmemory2=vb.views.kindpopup.value
        else
         kindpopupmemory1=vb.views.kindpopup.value
        end
        if (vb.views.popup.value>1) and (vb.views.kindpopup.value<3) then
          vb.views.popup.value=popupmemory1
        end
        if (vb.views.popup.value==1) and (vb.views.kindpopup.value>2) then
          vb.views.popup.value=popupmemory2
        end
        ]]        
      end
    }  
  }
  local voices_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 40,
      text = "Voices:"
    },
    vb:switch {
      id = "voices",
      items = {"3", "4"},
      value = 1,
      width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    },
        vb:text {
      width = 83,
      text = "No Arp:"
    },
    vb:checkbox {
      id = "noarp",
      value = true,
      --width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  }
  
  local confirst_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 140,
      text = "Dissonances:"
    },
    vb:popup {
      id = "confirst",
      value = 3,
      items = {"allowed","fewer","none"},
      width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  } 
  local copynoteoffs_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 182,
      text = "Copy Note-Offs:"
    },
    vb:checkbox {
      id = "noteoffs",
      value = true,
      --width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  }   
  local wards_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 182,
      text = "Finish on prime:"
    },
    vb:checkbox {
      id = "wards",
      value = true,
      --width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  }       
  local skipping_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 80,
      text = "Skipping:"
    },
    vb:popup {
      id = "skp",
      value = 1,
      width = 120,
      items = {'no skipping','half skipping','skipping'},
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  }
    local rotations_row = vb:horizontal_aligner {
    mode = "right",
    
    
    vb:text {
      width = 182,
      text = "Adjust inversions:"
    },
    vb:checkbox {
      id = "rotations",
      value = true,
      --width = 60,
      notifier = function()
         --print(vb.views.voices.value)
      end
    }
  }      
  local close_button_row = vb:horizontal_aligner {
    mode = "right",
--[[ ------------------------------------------------------------------------------------------------------------------here
            vb:button {
      text = "dev",
      width = 60,
      height = renoise.ViewBuilder.DEFAULT_DIALOG_BUTTON_HEIGHT,
      notifier = function()
       devmode()
      end
    }
,
--]] 
        vb:button {
      text = "Match & Close",
      width = 60,
      height = renoise.ViewBuilder.DEFAULT_DIALOG_BUTTON_HEIGHT,
      notifier = function()
        if (renoise.song().tracks[renoise.song().selected_track_index].type==renoise.Track.TRACK_TYPE_SEQUENCER) then
         if (attachchords()==2) then
          control_example_dialog:close()
         end
        end
      end
    }
, 
    vb:button {
      text = "Match",
      width = 60,
      height = renoise.ViewBuilder.DEFAULT_DIALOG_BUTTON_HEIGHT,
      notifier = function()
        if (renoise.song().tracks[renoise.song().selected_track_index].type==renoise.Track.TRACK_TYPE_SEQUENCER) then
         attachchords()
        end
      end
    }
  }

local urlrow = vb:horizontal_aligner {

   vb:button {
    width = 204,
     text = "http://www.laffik.com/",
     notifier = function()
     renoise.app():open_url('http://www.laffik.com/')
     end
   } 
}

  local dialog_content = vb:column {
    margin = DIALOG_MARGIN,
    uniform = true,
    patternsstart_row,
    --instrument_row,
    algorythm,
    skipping_row,
    voices_row,
    confirst_row,
    wards_row,
    copynoteoffs_row,
    rotations_row,
    --noarp_row,
    close_button_row,
    urlrow
  }
   
 if (control_example_dialog and control_example_dialog.visible) then 
  control_example_dialog:show()
 else  
  control_example_dialog = renoise.app():show_custom_dialog(
    "Progressor v1.1 by Laffik", dialog_content, function(dialog,key) return key end
  )
  end
  renoise.song().sequencer.pattern_sequence_observable:add_notifier(function()
    if vb.views.pe.value>(renoise.song().transport.song_length.sequence-1) then
     vb.views.pe.value=renoise.song().transport.song_length.sequence-1
    end   
    vb.views.pe.max=renoise.song().transport.song_length.sequence-1 
    if vb.views.ps.value>(renoise.song().transport.song_length.sequence-1) then
     vb.views.ps.value=renoise.song().transport.song_length.sequence-1
    end  
    vb.views.ps.max=renoise.song().transport.song_length.sequence-1   
  end)
    renoise.song().instruments_observable:add_notifier(function() createinstrumentlist() vb.views.popup2.items=instnamestable end)
  renoise.song().selected_instrument_observable:add_notifier(function() createinstrumentlist() vb.views.popup2.items=instnamestable vb.views.popup2.value=renoise.song().selected_instrument_index end)
  renoise.song().selected_instrument_index_observable:add_notifier(function() createinstrumentlist() vb.views.popup2.items=instnamestable vb.views.popup2.value=renoise.song().selected_instrument_index end)

end -------------------------------------------------------------------------------------------------------------------------here
----[[  -----------------------------------------------------------------------------------------------------------------------here
renoise.tool():add_menu_entry {
  name = "Main Menu:Tools:Progressor...",
  invoke = function() mainproc() end
}
renoise.tool():add_menu_entry {
  name = "Pattern Editor:Progressor...",
  invoke = function() mainproc() end
}
--]]  --here
