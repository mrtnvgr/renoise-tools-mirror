<?xml version="1.0" encoding="UTF-8"?>
<FilterDevicePreset doc_version="13">
  <DeviceSlot type="FormulaMetaDevice">
    <IsMaximized>true</IsMaximized>
    <FormulaParagraphs>
      <FormulaParagraph>smooth()</FormulaParagraph>
    </FormulaParagraphs>
    <FunctionsParagraphs>
      <FunctionsParagraph>-- Fixed-time slider smoother</FunctionsParagraph>
      <FunctionsParagraph>-- set time as lines(x) beats(x) or seconds(x)</FunctionsParagraph>
      <FunctionsParagraph>DURATION = beats(4) -- multiplied by Duration</FunctionsParagraph>
      <FunctionsParagraph>-- the Easing slider goes like this:</FunctionsParagraph>
      <FunctionsParagraph>-- [ linear, ease in, ease both, ease out ]</FunctionsParagraph>
      <FunctionsParagraph>-- the types will be faded together but</FunctionsParagraph>
      <FunctionsParagraph>-- 0   no easing, linear fade</FunctionsParagraph>
      <FunctionsParagraph>-- 1/3 ease in</FunctionsParagraph>
      <FunctionsParagraph>-- 2/3 ease both in and out</FunctionsParagraph>
      <FunctionsParagraph>-- 1   ease out</FunctionsParagraph>
      <FunctionsParagraph>----------------------------------------------</FunctionsParagraph>
      <FunctionsParagraph>function ease_in(x) return pow(x, 3) end</FunctionsParagraph>
      <FunctionsParagraph>function ease_out(x) return 1-pow(1-x,3) end</FunctionsParagraph>
      <FunctionsParagraph>function ease_both(x) </FunctionsParagraph>
      <FunctionsParagraph>  if x &lt; 0.5 then return 4 * ease_in(x)</FunctionsParagraph>
      <FunctionsParagraph>  else return 1 - pow(-2 * x + 2, 3) / 2 end</FunctionsParagraph>
      <FunctionsParagraph>end</FunctionsParagraph>
      <FunctionsParagraph>function lerp(a, b, t) </FunctionsParagraph>
      <FunctionsParagraph>  return a + (b - a) * t end</FunctionsParagraph>
      <FunctionsParagraph>function ease(x, e)</FunctionsParagraph>
      <FunctionsParagraph>  e = e * 3</FunctionsParagraph>
      <FunctionsParagraph>  if e &lt; 1 then </FunctionsParagraph>
      <FunctionsParagraph>    return lerp(x, ease_in(x), e)</FunctionsParagraph>
      <FunctionsParagraph>  elseif e &lt; 2 then</FunctionsParagraph>
      <FunctionsParagraph>    return lerp(ease_in(x), ease_both(x), e-1)</FunctionsParagraph>
      <FunctionsParagraph>  else</FunctionsParagraph>
      <FunctionsParagraph>    return lerp(ease_both(x),ease_out(x), e-2)</FunctionsParagraph>
      <FunctionsParagraph>  end</FunctionsParagraph>
      <FunctionsParagraph>end</FunctionsParagraph>
      <FunctionsParagraph/>
      <FunctionsParagraph>function seconds(x) </FunctionsParagraph>
      <FunctionsParagraph>  return x and x * SRATE or 0 end</FunctionsParagraph>
      <FunctionsParagraph>function lines(x) </FunctionsParagraph>
      <FunctionsParagraph>  return x and x * SPL or 0 end</FunctionsParagraph>
      <FunctionsParagraph>function beats(x) </FunctionsParagraph>
      <FunctionsParagraph>  return x and x * SPL * LPB or 0 end</FunctionsParagraph>
      <FunctionsParagraph/>
      <FunctionsParagraph>start = -INF</FunctionsParagraph>
      <FunctionsParagraph>from = nil</FunctionsParagraph>
      <FunctionsParagraph>to = nil</FunctionsParagraph>
      <FunctionsParagraph/>
      <FunctionsParagraph>function smooth()</FunctionsParagraph>
      <FunctionsParagraph>  if to ~= A then</FunctionsParagraph>
      <FunctionsParagraph>    start = SAMPLECOUNTER</FunctionsParagraph>
      <FunctionsParagraph>    to = A</FunctionsParagraph>
      <FunctionsParagraph>    from = OUTPUT</FunctionsParagraph>
      <FunctionsParagraph>  end</FunctionsParagraph>
      <FunctionsParagraph>  if start == nil then return OUTPUT end</FunctionsParagraph>
      <FunctionsParagraph>  local d = B &gt; 0 and DURATION * B or DURATION</FunctionsParagraph>
      <FunctionsParagraph>  local t =</FunctionsParagraph>
      <FunctionsParagraph>    min(1,(SAMPLECOUNTER - start) / d)</FunctionsParagraph>
      <FunctionsParagraph>  return lerp(from, to, ease(t, C))</FunctionsParagraph>
      <FunctionsParagraph>end</FunctionsParagraph>
      <FunctionsParagraph>-- smoothies are good for you!</FunctionsParagraph>
    </FunctionsParagraphs>
    <InputNameA>Target</InputNameA>
    <InputNameB>Duration</InputNameB>
    <InputNameC>Easing</InputNameC>
    <EditorVisible>true</EditorVisible>
    <InputA>
      <Value>0.5</Value>
    </InputA>
    <InputB>
      <Value>1.0</Value>
    </InputB>
    <InputC>
      <Value>0.0</Value>
    </InputC>
  </DeviceSlot>
</FilterDevicePreset>